name: Backup

on:
  schedule:
    - cron: '0 */2 * * *'  
  workflow_dispatch:
  
jobs:
  backup:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Backup Repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}
          
      - name: Clone ACL4SSR_ACL4SSR with all branches
        run: |
          # 创建目标目录
          mkdir -p "ACL4SSR(ACL4SSR)"
          # 克隆仓库，不获取历史记录
          git clone --no-tags --depth=1 --mirror https://github.com/ACL4SSR/ACL4SSR ACL4SSR_ACL4SSR
          # 进入克隆的仓库目录
          cd ACL4SSR_ACL4SSR
          # 获取所有分支名
          branches=$(git branch -r | grep -v HEAD | sed 's/origin\///')
          for branch in $branches; do
            # 创建以分支名命名的文件夹
            mkdir -p "../ACL4SSR(ACL4SSR)/$branch"
            # 检出当前分支到临时目录
            git worktree add "../tmp_$branch" $branch
            # 将临时目录中的内容移动到目标文件夹
            mv "../tmp_$branch"/* "../ACL4SSR(ACL4SSR)/$branch/"
            # 删除临时工作树
            git worktree remove "../tmp_$branch"
          done
          # 删除克隆的仓库目录
          cd ..
          rm -rf ACL4SSR_ACL4SSR
             
      - name: Update timestamp
        run: echo "Backup run at $(date)" > backup-timestamp.txt
        
      - name: Commit and Push Changes
        env:
          PAT: ${{ secrets.PAT }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          if git diff-index --quiet HEAD; then
            echo "No changes detected, adding timestamp file."
            echo "Backup run at $(date)" > backup-timestamp.txt
            git add backup-timestamp.txt
            git commit -m "$(date +'%Y-%m-%d %H:%M:%S')"
          else
            git commit -m "Automated backup $(date +'%Y-%m-%d %H:%M:%S')"
          fi
          git remote set-url origin https://x-access-token:${PAT}@github.com/smjcxf/pz.git
          git push origin main
