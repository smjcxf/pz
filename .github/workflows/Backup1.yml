name: Backup Repositories

on:
  schedule:
    - cron: '0 */2 * * *'  
  workflow_dispatch:
  
jobs:
  backup:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Backup Repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}
          
      - name: Clone ACL4SSR_ACL4SSR and Process All Branches
        run: |
          # Create temporary directory for cloning
          mkdir -p temp_repo
          if ! git clone --mirror https://github.com/ACL4SSR/ACL4SSR temp_repo; then
            echo "Failed to clone the repository."
            exit 1
          fi
          cd temp_repo
          
          # Get all branch names
          branches=$(git branch -r | grep -v 'HEAD' | sed 's|origin/||g' | sed 's/^[ \t]*//')
          
          # Create main directory if it doesn't exist
          mkdir -p "../ACL4SSR(ACL4SSR)"
          
          # Process each branch
          for branch in $branches; do
            echo "Processing branch: $branch"
            # Create a temporary working directory for the branch
            if ! git worktree add "../temp_worktree_$branch" $branch; then
              echo "Failed to add worktree for branch $branch."
              continue
            fi
            # Create branch directory and copy files
            mkdir -p "../ACL4SSR(ACL4SSR)/$branch"
            if ! cp -r "../temp_worktree_$branch/." "../ACL4SSR(ACL4SSR)/$branch/"; then
              echo "Failed to copy files for branch $branch."
            fi
            # Remove the temporary working directory
            if ! git worktree remove "../temp_worktree_$branch"; then
              echo "Failed to remove worktree for branch $branch."
            fi
          done
          
          # Clean up temporary directory
          cd .. && rm -rf temp_repo
          
      - name: Update timestamp
        run: |
          timestamp=$(date +'%Y-%m-%d %H:%M:%S')
          echo "Backup run at $timestamp" > backup-timestamp.txt
          
      - name: Commit and Push Changes
        env:
          PAT: ${{ secrets.PAT }}
        run: |
          timestamp=$(date +'%Y-%m-%d %H:%M:%S')
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          if git diff-index --quiet HEAD; then
            echo "No changes detected, adding timestamp file."
            echo "Backup run at $timestamp" > backup-timestamp.txt
            git add backup-timestamp.txt
            git commit -m "$timestamp"
          else
            git commit -m "Automated backup $timestamp"
          fi
          git remote set-url origin https://x-access-token:${PAT}@github.com/smjcxf/pz.git
          if ! git push origin main; then
            echo "Failed to push changes to the repository."
            exit 1
          fi
